// Generated by CoffeeScript 1.6.3
var Clever, Promise, cleverStatistics, summary,
  __slice = [].slice;

Clever = require('clever');

Promise = require('when');

summary = require('summary');

cleverStatistics = function() {
  var clever, compute, config, deferred, done, want;
  want = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  deferred = Promise.defer();
  config = {
    key: 'DEMO_KEY'
  };
  clever = new Clever(config.key);
  done = function(err, sections) {
    var method, result, stats, _i, _len;
    if (err) {
      deferred.reject(Error(err));
    }
    stats = compute(sections);
    result = {};
    for (_i = 0, _len = want.length; _i < _len; _i++) {
      method = want[_i];
      if (method in stats) {
        result[method] = stats[method]();
      }
    }
    return deferred.resolve(result);
  };
  compute = function(sections) {
    var stats;
    return stats = summary(sections.map(function(section) {
      return (section.toJSON()).students.length;
    }, true));
  };
  clever.Section.find({}, done);
  return deferred.promise;
};

module.exports = cleverStatistics;
